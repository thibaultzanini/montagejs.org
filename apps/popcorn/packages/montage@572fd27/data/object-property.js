var Montage=require("montage").Montage,Exception=require("core/exception").Exception,Pledge=require("data/pledge").Pledge,PledgedSortedSet=require("data/pledge").PledgedSortedSet,Store=require("data/pledge").Store,logger=require("core/logger").logger("object-property"),_objectPropertyManager=null,ObjectProperty=exports.ObjectProperty=Montage.create(Montage,{init:{serializable:!1,enumerable:!1,value:function(){return this}},apply:{value:function(e,t){if(!e.hasOwnProperty("blueprint")){var n;n=Montage.getInfoForObject(e);if(n!=null&&n.isInstance===!1){if(typeof t=="undefined")t=Store.defaultManager.blueprintForPrototype(n.objectName,n.moduleId);else if(t.prototypeName!==n.objectName||t.moduleId!==n.moduleId)t=null;this.applyWithBlueprint(e,t)}}}},applyWithBlueprint:{value:function(e,t){t!=null&&(this.addProperties(e,t),t.parent!==null&&this.apply(Object.getPrototypeOf(e),t))}},addProperties:{value:function(e,t){var n,r;for(n=0;r=t.attributes[n];n++)r.isDerived?this.addDerivedProperty(e,r):r.isAssociation?this.addAssociation(e,r):this.addProperty(e,r);Montage.defineProperty(e,"context",{serializable:!1,enumerable:!0,value:null}),Montage.defineProperty(e,"_objectId",{serializable:!0,enumerable:!1,value:null}),Montage.defineProperty(e,"objectId",{enumerable:!0,serializable:!1,get:function(){return this._objectId===null&&(this._objectId=this.blueprint.objectId$Implementation),this._objectId},set:function(e){if(e===null)throw Exception.create().initWithMessageTargetAndMethod("Cannot set object Id to null",this,"objectId.set");this._objectId=e}}),Montage.defineProperty(e,"_blueprint",{serializable:!1,enumerable:!1,value:t}),Montage.defineProperty(e,"blueprint",{enumerable:!1,serializable:!1,get:function(){return this._blueprint}}),Montage.defineProperty(e,"isPledge",{serializable:!1,enumerable:!0,value:!1}),Montage.defineProperty(e,"withProperties",{serializable:!1,enumerable:!1,value:function(){return null}}),Montage.defineProperty(e,"willRead",{serializable:!1,enumerable:!1,value:this.willRead}),Montage.defineProperty(e,"willModify",{serializable:!1,enumerable:!1,value:this.willModify}),Montage.defineProperty(e,"blueprintGet",{serializable:!1,enumerable:!1,value:t.blueprintGet}),Montage.defineProperty(e,"blueprintSet",{serializable:!1,enumerable:!1,value:t.blueprintSet}),Montage.defineProperty(e,"_opaqueAccessState",{serializable:!1,enumerable:!1,value:null})}},addProperty:{value:function(e,t){this.addPropertyStorage(e,t),this.addPropertyDefinition(e,t),this.addPropertyStoredValue(e,t)}},addPropertyStorage:{value:function(e,t){var n="_"+t.name,r=null;e.hasOwnProperty(n)?logger.isError&&logger.error("We have an issue here. The developer should not override the storage value for "+n+"."):(t.isToMany?r={value:[],enumerable:!1,serializable:!0,distinct:!0}:r={value:null,enumerable:!1,serializable:!0},Montage.defineProperty(e,n,r))}},addPropertyDefinition:{value:function(e,t){var n=t.name,r=null;e.hasOwnProperty(n)?logger.isDebug&&logger.debug("The developer has already created the property "+n+" method do nothing."):(r={get:function(){return this.blueprintGet(n)},enumerable:!0,serializable:!1},t.readOnly||(r.set=function(e){return this.blueprintSet(n,e)}),Montage.defineProperty(e,n,r))}},addPropertyStoredValue:{value:function(e,t){var n=t.name+"$Storage",r=null;e.hasOwnProperty(n)?logger.isError&&logger.error("We have an issue here. The developer should not override the stored value for "+n+"."):(t.isToMany?r={value:[],enumerable:!1,serializable:!1,distinct:!0}:r={value:null,enumerable:!1,serializable:!1},Montage.defineProperty(e,n,r))}},addAssociation:{value:function(e,t){this.addPropertyStorage(e,t),this.addAssociationDefinition(e,t),this.addPropertyStoredValue(e,t)}},addAssociationDefinition:{value:function(e,t){t.isToMany?this.addToManyAssociationDefinition(e,t):this.addToOneAssociationDefinition(e,t)}},addToOneAssociationDefinition:{value:function(e,t){var n=t.name.toCapitalized(),r="addTo"+n;e.hasOwnProperty(r)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+r+"."):Montage.defineProperty(e,r,{serializable:!1,enumerable:!1,value:function(){return null}}),r="removeFrom"+n,e.hasOwnProperty(r)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+r+"."):Montage.defineProperty(e,r,{serializable:!1,enumerable:!1,value:function(){return null}}),r="clear"+n,e.hasOwnProperty(r)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+r+"."):Montage.defineProperty(e,r,{serializable:!1,enumerable:!1,value:function(){return null}})}},addToManyAssociationDefinition:{value:function(e,t){var n=t.name.toCapitalized(),r="addTo"+n;e.hasOwnProperty(r)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+r+"."):Montage.defineProperty(e,r,{serializable:!1,enumerable:!1,value:function(){return null}}),r="removeFrom"+n,e.hasOwnProperty(r)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+r+"."):Montage.defineProperty(e,r,{serializable:!1,enumerable:!1,value:function(){return null}}),r="clear"+n,e.hasOwnProperty(r)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+r+"."):Montage.defineProperty(e,r,{serializable:!1,enumerable:!1,value:function(){return null}})}},addDerivedProperty:{value:function(e,t){}},willRead:{value:function(e){var t="_"+e.name;if(typeof this[t]!="undefined")return;typeof this.context!="undefined"&&this.context!==null&&this.context.fulfillPropertyForInstance(e,this)}},willModify:{value:function(e,t){var n="_"+e.name,r=this[n];(typeof r=="undefined"||r!==t)&&typeof this.context!="undefined"&&this.context!==null&&this.context.willModifyPropertyForInstance(e,this,t)}},manager:{get:function(){return _objectPropertyManager===null&&(_objectPropertyManager=Object.freeze(ObjectProperty.create().init())),_objectPropertyManager}}})