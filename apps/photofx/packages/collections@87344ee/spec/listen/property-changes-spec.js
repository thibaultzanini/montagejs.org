require("../../shim");var PropertyChanges=require("../../listen/property-changes");describe("PropertyChanges",function(){it("observes setter on object",function(){spy=jasmine.createSpy();var e={};PropertyChanges.addBeforeOwnPropertyChangeListener(e,"x",function(e,t){spy("from",e,t)}),PropertyChanges.addOwnPropertyChangeListener(e,"x",function(e,t){spy("to",e,t)}),e.x=10,expect(e.x).toEqual(10),PropertyChanges.makePropertyUnobservable(e,"x"),e.x=20,expect(e.x).toEqual(20),expect(spy.argsForCall).toEqual([["from",undefined,"x"],["to",10,"x"]])}),it("observes setter on object with getter/setter",function(){spy=jasmine.createSpy();var e,t=Object.create(Object.prototype,{_x:{value:10,writable:!0},x:{get:function(){return this._x},set:function(e){this._x=e},enumerable:!1,configurable:!0}});PropertyChanges.addBeforeOwnPropertyChangeListener(t,"x",function(e,t){spy("from",e,t)}),PropertyChanges.addOwnPropertyChangeListener(t,"x",function(e,t){spy("to",e,t)}),t.x=20,expect(t.x).toEqual(20),expect(spy.argsForCall).toEqual([["from",10,"x"],["to",20,"x"]])}),it("shouldn't call the listener if the new value is the same after calling the object setter",function(){spy=jasmine.createSpy();var e,t=Object.create(Object.prototype,{x:{get:function(){return 20},set:function(e){},enumerable:!1,configurable:!0}});PropertyChanges.addBeforeOwnPropertyChangeListener(t,"x",function(e,t){spy("from",e,t)}),PropertyChanges.addOwnPropertyChangeListener(t,"x",function(e,t){spy("to",e,t)}),t.x=10,expect(t.x).toEqual(20),expect(spy).not.toHaveBeenCalled()}),it("calls setter on object when the new value is the current value",function(){var e=Object.create(Object.prototype,{_x:{value:0,writable:!0},x:{get:function(){return this._x},set:function(e){this._x=e*2},configurable:!0,enumerable:!0}});PropertyChanges.addOwnPropertyChangeListener(e,"x",function(){}),e.x=1,e.x=2,expect(e.x).toBe(4)}),it("handles cyclic own property change listeners",function(){var e={},t={};PropertyChanges.addOwnPropertyChangeListener(e,"foo",function(e){t.bar=e}),PropertyChanges.addOwnPropertyChangeListener(t,"bar",function(t){e.foo=t}),e.foo=10,expect(t.bar).toEqual(10)}),it("handles generic own property change listeners",function(){var e={handlePropertyChange:function(e,t){expect(e).toBe(10),expect(t).toBe("foo")}};spyOn(e,"handlePropertyChange").andCallThrough(),PropertyChanges.addOwnPropertyChangeListener(e,"foo",e),e.foo=10,expect(e.handlePropertyChange).toHaveBeenCalled()}),it("handles specific own property change listeners",function(){var e={handleFooChange:function(e){expect(e).toBe(10)}};spyOn(e,"handleFooChange").andCallThrough(),PropertyChanges.addOwnPropertyChangeListener(e,"foo",e),e.foo=10,expect(e.handleFooChange).toHaveBeenCalled()})})